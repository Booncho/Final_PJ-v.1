<div class="container mt-5">
  <button onclick="window.location.href='/admin';" class="btn btn-sm btn-dark float-right">
    ย้อนกลับ
  </button>

  <h3 class="mb-4">จัดการข้อมูลนักศึกษา</h3>
  <hr />

  <form action="/upload-csv" method="post" enctype="multipart/form-data" id="uploadForm">
    <div class="form-row align-items-center">
      <div class="col-auto">
        <div class="custom-file">
          <input type="file" class="custom-file-input" id="fileInput" name="file" accept=".csv" required
            onchange="updateFileNameLabel()" />
          <label class="custom-file-label" for="fileInput" id="fileLabel">File.csv</label>
        </div>
      </div>
      <div class="col-auto">
        <button type="submit" class="btn btn-primary">อัปโหลด</button>
        <button type="button" class="btn btn-secondary ml-2" onclick="resetForm()">
          ล้าง
        </button>
      </div>
    </div>
    <hr />
  </form>

  <h5 class="mt-5">แสดงข้อมูล</h5>
  <hr />

  <div class="table-wrapper">
    <table class="table table-striped" id="csvTable">
      <thead class="sticky-header">
        <tr id="csvHeader"></tr>
      </thead>
      <tbody id="csvBody"></tbody>
    </table>
  </div>

  <% if (uploadedFiles.length> 0) { %>
    <div class="card">
      <div class="card-body">
        <h5 class="card-title">ชุดข้อมูลที่ถูกอัปโหลด</h5>
        <div class="table-responsive">
          <table class="table table-bordered table-hover">
            <thead class="thead-light">
              <tr>
                <th>ชื่อ</th>
                <th>วันที่/เวลา</th>
                <th>จัดการ</th>
              </tr>
            </thead>
            <tbody>
              <% uploadedFiles.forEach(file=> { %>
                <tr id="row-<%= file.filename %>">
                  <td>
                    <%= file.filename %>
                  </td>
                  <td>
                    <%= file.uploadedAt %>
                  </td>
                  <td>
                    <a href="/preview/<%= file.filename %>" class="btn btn-sm btn-info">แสดง</a>
                    <a href="javascript:void(0);" class="btn btn-sm btn-warning"
                      onclick="openEditModal('<%= file.filename %>')">แก้ไข</a>
                    <a href="#" class="btn btn-sm btn-danger"
                      onclick="deleteFile('<%= file.filename %>'); return false;">ลบ</a>
                  </td>
                </tr>
                <% }); %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <% } else { %>
      <p>ไม่พบข้อมูล...</p>
      <% } %>

        <div id="alert" class="alert alert-success mt-3" role="alert" style="display: none"></div>
</div>

<div class="modal" id="editModal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">แก้ไขชื่อไฟล์</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="editForm" method="post">
          <div class="form-group">
            <label for="newFilename">ชื่อใหม่</label>
            <input type="text" class="form-control" id="newFilename" name="newFilename" required />
          </div>
          <button type="submit" class="btn btn-primary">บันทึก</button>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  // Update File Name Label Function
  function updateFileNameLabel() {
    const input = document.getElementById("fileInput");
    const label = document.getElementById("fileLabel");
    label.textContent = input.files[0] ? input.files[0].name : "เลือกไฟล์...";
  }

  // Reset Form Function
  function resetForm() {
    document.getElementById("uploadForm").reset();
    document.getElementById("csvHeader").innerHTML = "";
    document.getElementById("csvBody").innerHTML = "";

    // Clear file input and reset label
    const fileInput = document.getElementById("fileInput");
    const fileLabel = document.getElementById("fileLabel");
    fileInput.value = ""; // Clear the file input
    fileLabel.textContent = "เลือกไฟล์..."; // Reset label text
}

  // Delete File Function
  function deleteFile(filename) {
    if (confirm(`ต้องการลบ ${filename} หรือไม่?`)) {
      fetch(`/admin/delete-csv/${filename}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json",
        },
      })
        .then((response) => response.json())
        .then((result) => {
          if (result.success) {
            document.getElementById(`row-${filename}`).remove();
            showAlert(result.alertMessage);
          } else {
            alert("Error deleting file.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("Error deleting file.");
        });
    }
  }

  // Show Alert Function
  function showAlert(message) {
    const alertBox = document.getElementById("alert");
    alertBox.style.display = "block";
    alertBox.innerText = message;
    setTimeout(() => {
      alertBox.style.display = "none";
    }, 3000);
  }

  // Open Edit Modal Function
  function openEditModal(filename) {
    document.getElementById("editForm").action = `/admin/edit/${filename}`;
    document.getElementById("editForm").onsubmit = function (event) {
      event.preventDefault();
      const newFilename = document.getElementById("newFilename").value;
      fetch(`/admin/edit-csv/${filename}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ newFilename: newFilename }),
      })
        .then((response) => response.json())
        .then((result) => {
          if (result.success) {
            showAlert(result.alertMessage);
            setTimeout(() => {
              window.location.href = "/admin/managedata";
            }, 3000);
          } else {
            alert("Error editing file.");
          }
        })
        .catch((error) => {
          console.error("Error:", error);
          alert("Error editing file.");
        });
    };
    $("#editModal").modal("show");
  }

  // File Upload and Table Update
  document.addEventListener("DOMContentLoaded", () => {
    const csvTable = document.getElementById("csvTable");
    const csvHeader = document.getElementById("csvHeader");
    const csvBody = document.getElementById("csvBody");

    document
      .querySelector('input[type="file"]')
      .addEventListener("change", () => {
        const file = document.querySelector('input[type="file"]').files[0];
        if (file) {
          const reader = new FileReader();
          reader.onload = (event) => {
            const text = event.target.result;
            const rows = text.split("\n").map((row) => row.split(","));
            csvHeader.innerHTML = "";
            csvBody.innerHTML = "";

            if (rows.length) {
              // Add headers
              const headers = rows[0];
              headers.forEach((header) => {
                const th = document.createElement("th");
                th.textContent = header.trim();
                csvHeader.appendChild(th);
              });

              // Add rows
              rows.slice(1, 11).forEach((row) => {
                const tr = document.createElement("tr");
                row.forEach((cell) => {
                  const td = document.createElement("td");
                  td.textContent = cell.trim();
                  tr.appendChild(td);
                });
                csvBody.appendChild(tr);
              });

              // Add "Show more" button if there are more than 10 rows
              if (rows.length > 11) {
                const remainingRows = rows.slice(11);
                const showMoreTr = document.createElement("tr");
                const showMoreTd = document.createElement("td");
                showMoreTd.colSpan = headers.length;
                showMoreTd.innerHTML = `<button class="btn btn-link" id="showMoreBtn">Show more...</button>`;
                showMoreTr.appendChild(showMoreTd);
                csvBody.appendChild(showMoreTr);

                document
                  .getElementById("showMoreBtn")
                  .addEventListener("click", () => {
                    remainingRows.forEach((row) => {
                      const tr = document.createElement("tr");
                      row.forEach((cell) => {
                        const td = document.createElement("td");
                        td.textContent = cell.trim();
                        tr.appendChild(td);
                      });
                      csvBody.appendChild(tr);
                    });
                    showMoreTr.remove();
                  });
              }
            }
          };
          reader.readAsText(file);
        }
      });
  });
</script>